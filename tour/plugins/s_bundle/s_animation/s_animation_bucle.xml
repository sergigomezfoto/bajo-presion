<krpano>
	 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// S_ANIMATION_BUCLE EXTENDED S_ANIMATION_BUCLE EXTENDED S_ANIMATION_BUCLE EXTENDED S_ANIMATION_BUCLE
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////   
//VERTTICAL
//s_animation_bucle_v(framewidth, frameheight, framerate,*extended[frameto stop, time to stop, action to do],*extended_varname,inipos,sframe)

<action name="s_animation_bucle_v" scope="local" args="framewidth, frameheight, framerate,extended_varname,inipos,sframe"> 

set(caller.crop,'');

calc(frames, caller.imageheight / frameheight);
def(local.frame, integer, calc(!sframe
                                      ? 0 
                                      : sframe
                                      )
);
calc(calc('global.' + extended_varname + '_listen'), frame + '|' + frames); 
calc(caller.crop,
          !inipos
          ? '0|0|' + framewidth + '|' + frameheight 
          :  '0|' + inipos + '|' + framewidth + '|' + frameheight 
          );

// INTERVAL/////////////////////////////////////////////////////////////
//aminacio

	//if(extended_varname != null,trace('variable global: ', calc('global.' + extended_varname)); );


	setinterval(calc('crop_anim_' + caller.name), calc(1.0 / framerate),

			 if ((calc('global.' + extended_varname) !== 'pause' AND calc('global.' + extended_varname) !== 'clear') OR calc('global.' + extended_varname) === 'resume' ,
			        inc(frame);
			        if(frame GE frames, set(frame,0););
			        copy(ypos,frame);
			        mul(ypos, frameheight);
			        //listen
			        if(extended_varname != null,calc(calc('global.' + extended_varname + '_listen'), frame + '|' + frames););
			    	calc(caller.crop, '0|' + ypos + '|' + framewidth + '|' + frameheight);    

			);
//mata interval
		   if(!caller.loaded OR calc('global.' + extended_varname) === 'clear', 
					clearinterval(calc('crop_anim_' + caller.name));
					delete(calc('global.' + extended_varname));
		 	);
 );  

    </action>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//HORIZONTAL
//s_animation_bucle_h(framewidth, frameheight, framerate,*extended[frameto stop, time to stop, action to do],*extended_varname,inipos,frame)

<action name="s_animation_bucle_h" scope="local" args="framewidth, frameheight, framerate,extended_varname,inipos,sframe"> 

set(caller.crop,'');

calc(frames, caller.imagewidth / framewidth);
def(local.frame, integer, calc(!sframe
                                      ? 0 
                                      : sframe
                                      )
);
calc(calc('global.' + extended_varname + '_listen'), frame + '|' + frames); 
calc(caller.crop,
          !inipos
          ? '0|0|' + framewidth + '|' + frameheight 
          : inipos + '|0|' + framewidth + '|' + frameheight 
          );

// INTERVAL/////////////////////////////////////////////////////////////
//aminacio
setinterval(calc('crop_anim_' + caller.name), calc(1.0 / framerate),

	//if(extended_varname != null,trace('variable global: ', calc('global.' + extended_varname)); );



			 if ((calc('global.' + extended_varname) !== 'pause' AND calc('global.' + extended_varname) !== 'clear') OR calc('global.' + extended_varname) === 'resume' ,
			        inc(frame);
			        if(frame GE frames, set(frame,0););
			        copy(xpos,frame);
			        mul(xpos, framewidth);
			        //listen
			        if(extended_varname != null,calc(calc('global.' + extended_varname + '_listen'), frame + '|' + frames););
			    	calc(caller.crop, xpos + '|0|' + framewidth + '|' + frameheight);      
			);
//mata interval
		   if(!caller.loaded OR calc('global.' + extended_varname) === 'clear', 
					clearinterval(calc('crop_anim_' + caller.name));
					delete(calc('global.' + extended_varname));
		 	);
 );     
    </action>
	
</krpano>