<krpano>

 <include url="styles/styles.xml" />  
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//BOOLEAN

 <action name="s_boolean_setter" scope="local" args="elementtochanche,atributetochange,tagtexts,xpos,ypos,barwidth,parentname,salign,sedge">

//DEFINICIONS
calc(s_boolean_line, elementtochanche + atributetochange + '_l');
calc(s_boolean_thumb,elementtochanche + atributetochange + '_b');
calc(s_boolean_tagtext, elementtochanche + atributetochange + '_t');

//SETTING TO CHANGE
set(krp,false);
if (
	layer[get(elementtochanche)].name,
	
    	calc(settingtochange, 'layer[' + elementtochanche + '].' + atributetochange);
		def(eltype,string,'layer{ ');

	,hotspot[get(elementtochanche)].name,

		calc(settingtochange, 'hotspot[' + elementtochanche + '].' + atributetochange);
		def(eltype,string,'hotspot{ ');		
	,

		calc(settingtochange,elementtochanche + '.' + atributetochange );
		def(eltype,string,'');
		set(krp,true);
); 

//LINIA MARE
addlayer(get(s_boolean_line), line);
line.loadstyle('s_boolean_line');
set(line
	,
	ox=get(xpos)
	,
	oy=get(ypos)
	,
	width=calc(barwidth?barwidth:calc(style[s_boolean_line].width));
	,
	parent=calc(parentname?parentname:calc(style[s_boolean_line].parent));
    ,
	align=calc(salign ? salign : style[s_boolean_line].align)
	,
	edge=calc(sedge ? sedge : style[s_boolean_line].edge)
);
//THUMB
addlayer(get(s_boolean_thumb),thumb);
thumb.loadstyle('s_boolean_thumb');

 set(thumb,	
	onclicking=calc('toggle(' + settingtochange + ');')
	,
	parent=get(s_boolean_line)
    ,
    align=calc(calc(settingtochange) ? 'right' : 'left')
    ,
    bgcolor=calc(calc(settingtochange) ? layer[get(s_boolean_thumb)].bgcolor1 : layer[get(s_boolean_thumb)].bgcolor0 )
    ,
    onclick="calc(align, align === 'left' ? 'right' : 'left'); calc(bgcolor,align === 'left'? bgcolor0 : bgcolor1 ); onclicking();"

 );

//dependency s_floating_text_constructor
//ETIQUETA GENERAL
if (tagtexts !== 'off'
    ,
    s_floating_text_constructor(calc(tagtexts ? tagtexts : get(eltype) + elementtochanche + (krp ? '' : ' }' ) + '.' + atributetochange + ': ' ),get(s_boolean_tagtext),s_boolean_title,get(s_boolean_line));

    asyncloop(!layer[calc(s_boolean_tagtext + 's_ft')].width,,
        addlayer(calc(s_boolean_line + 'hover'),linehover); 
        linehover.loadstyle('s_boolean_line_hover');
            set(linehover
            ,
            parent=get(s_boolean_line)
            ,
            width=get(layer[calc(s_boolean_tagtext + 's_ft')].width)
            ,
            height=calc(layer[get(s_boolean_line)].height + layer[calc(s_boolean_tagtext + 's_ft')].height)        
            ,
            onclick=calc('callwith(layer[' + s_boolean_thumb + '],onclick)')
        );
    );
    ,
    addlayer(calc(s_boolean_line + 'hover'),linehover); 
        linehover.loadstyle('s_boolean_line_hover');
            set(linehover
            ,
            parent=get(s_boolean_line)
            ,
            width=get(layer[get(s_boolean_line)].width)
            ,
            height=calc(layer[get(s_boolean_line)].height)        
            ,
            onclick=calc('callwith(layer[' + s_boolean_thumb + '],onclick)')
        );
);
//fi dependency s_floating_text_constructor

// PART CLICKABLE


</action>


</krpano>
